description='Spring Recipes :: Chapter 13 :: Spring Batch'

project(':Ch13:Recipe_13_1_i') {
    // Define defaultTasks, first clean then build for springintro
    defaultTasks 'clean', 'build'
    // Define dependencies
    dependencies {
        compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
        compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
        compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
        compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
        compile group: 'org.springframework', name: 'spring-jdbc', version:"$springVersion"
        compile group: 'org.springframework.batch', name: 'spring-batch-core', version:"$springBatchVersion"
        compile group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.0'
        compile group: 'org.apache.derby', name: 'derby', version: '10.10.1.1'
        compile group: 'org.apache.derby', name: 'derbyclient', version: '10.10.1.1'
    }
    // Define how to build final JAR for project
    jar {
        //The following creates a fat-JAR with all dependencies embedded
        // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        //Instead use custom task to copy files to lib directory and create a custom manfiest
        dependsOn copyDependenciesToLibDir
        manifest.attributes("Main-Class": "com.apress.springrecipes.springbatch.Main")
        project.ext["CP"] = new StringBuffer()
        configurations.runtime.allDependencies.each { dep ->
            project.ext["CP"].append(' ')
            project.ext["CP"].append("lib/${dep.getName()}-${dep.getVersion()}.jar")
        }
        project.ext["CP"].delete(0,1)
        manifest.attributes("Class-Path": project.ext["CP"].toString())
    }
} // End 15_1_i project


// Define 15_1_ii project
project(':Ch13:Recipe_13_1_ii') {
    // Define defaultTasks, first clean then build for springintro
    defaultTasks 'clean', 'build'
    // Define dependencies
    dependencies {
        compile group: 'org.springframework', name: 'spring-core',version:"$springVersion"
        compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
        compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
        compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
        compile group: 'org.springframework', name: 'spring-jdbc', version:"$springVersion"
        compile group: 'org.springframework.batch', name: 'spring-batch-core', version:"$springBatchVersion"
        compile group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.0'
        compile group: 'org.apache.derby', name: 'derby', version: '10.10.1.1'
        compile group: 'org.apache.derby', name: 'derbyclient', version: '10.10.1.1'
    }
    // Define how to build final JAR for project
    jar {
        //The following creates a fat-JAR with all dependencies embedded
        // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        //Instead use custom task to copy files to lib directory and create a custom manfiest
        dependsOn copyDependenciesToLibDir
        manifest.attributes("Main-Class": "com.apress.springrecipes.springbatch.Main")
        project.ext["CP"] = new StringBuffer()
        configurations.runtime.allDependencies.each { dep ->
            project.ext["CP"].append(' ')
            project.ext["CP"].append("lib/${dep.getName()}-${dep.getVersion()}.jar")
        }
        project.ext["CP"].delete(0,1)
        manifest.attributes("Class-Path": project.ext["CP"].toString())
    }
} // End 15_1_ii project


// Define 15_1_iii project
project(':Ch13:Recipe_13_1_iii') {
    // Define defaultTasks, first clean then build for springintro
    defaultTasks 'clean', 'build'
    // Define dependencies
    dependencies {
        compile group: 'org.springframework', name: 'spring-core',version:"$springVersion"
        compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
        compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
        compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
        compile group: 'org.springframework', name: 'spring-jdbc', version:"$springVersion"
        compile group: 'org.springframework.batch', name: 'spring-batch-core', version:"$springBatchVersion"
        compile group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.0'
        compile group: 'org.apache.derby', name: 'derby', version: '10.10.1.1'
        compile group: 'org.apache.derby', name: 'derbyclient', version: '10.10.1.1'
    }
    // Define how to build final JAR for project
    jar {
        //The following creates a fat-JAR with all dependencies embedded
        // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        //Instead use custom task to copy files to lib directory and create a custom manfiest
        dependsOn copyDependenciesToLibDir
        manifest.attributes("Main-Class": "com.apress.springrecipes.springbatch.Main")
        project.ext["CP"] = new StringBuffer()
        configurations.runtime.allDependencies.each { dep ->
            project.ext["CP"].append(' ')
            project.ext["CP"].append("lib/${dep.getName()}-${dep.getVersion()}.jar")
        }
        project.ext["CP"].delete(0,1)
        manifest.attributes("Class-Path": project.ext["CP"].toString())
    }
} // End 15_1_iii project
