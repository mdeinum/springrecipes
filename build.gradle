configure(allprojects) { project -> 
	group = 'com.apress.springrecipes'
	version = '3.0.0-SNAPSHOT'

	ext.springVersion		 		= "4.0.2.RELEASE"
	ext.springSecurityVersion		= "3.2.2.RELEASE"
	ext.springDataJpaVersion 		= "1.5.1.RELEASE"
	ext.springWsVersion				= "2.1.4.RELEASE"
	ext.springBatchVersion	 		= "3.0.0.M3"
	ext.springIntegrationVersion	= "4.0.0.M3"
	ext.slf4jVersion         		= "1.7.6"
	ext.logbackVersion		 		= "1.1.1"
	ext.aspectjVersion       		= "1.7.4"
	ext.activemqVersion				= "5.7.0"
	ext.groovyVersion        		= "2.2.2"
	ext.hibernate4Version    		= "4.3.3.Final"
	ext.hibValVersion        		= "4.3.1.Final"
	ext.hsqldbVersion        		= "2.3.1"
	ext.jackson2Version      		= "2.3.1"
	ext.jodaVersion          		= "2.3"
	ext.junitVersion         		= "4.11"

	apply plugin: 'java'
	apply plugin: 'idea'
	apply plugin: 'eclipse'
	
	compileJava.options*.compilerArgs = [
		"-Xlint:serial", "-Xlint:varargs", "-Xlint:cast", "-Xlint:classfile",
		"-Xlint:dep-ann", "-Xlint:divzero", "-Xlint:empty", "-Xlint:finally",
		"-Xlint:overrides", "-Xlint:path", "-Xlint:processing", "-Xlint:static",
		"-Xlint:try", "-Xlint:fallthrough", "-Xlint:rawtypes", "-Xlint:deprecation",
		"-Xlint:unchecked", "-Xlint:-options"
	]

	compileTestJava.options*.compilerArgs = [
		"-Xlint:serial", "-Xlint:varargs", "-Xlint:cast", "-Xlint:classfile",
		"-Xlint:dep-ann", "-Xlint:divzero", "-Xlint:empty", "-Xlint:finally",
		"-Xlint:overrides", "-Xlint:path", "-Xlint:processing", "-Xlint:static",
		"-Xlint:try", "-Xlint:-fallthrough", "-Xlint:-rawtypes", "-Xlint:-deprecation",
		"-Xlint:-unchecked", "-Xlint:-options"]

	compileJava {
		sourceCompatibility=1.7
		targetCompatibility=1.7
	}

	compileTestJava {
		sourceCompatibility=1.7
		targetCompatibility=1.7
	}
	
	// Define repositorie to get dependencies
	repositories {
		mavenCentral()
		// Public Spring artifacts
		maven { url="http://repo.spring.io/milestone" }
		maven { url="http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/release" }
	}
  
	configurations {
		// We want to use SLF4J for logging, ban commons-logging
		all*.exclude group: 'commons-logging', module: 'commons-logging'
	
		provided
	}
  
	dependencies {
		compile("org.slf4j:slf4j-api:${slf4jVersion}")
		compile("org.slf4j:jcl-over-slf4j:${slf4jVersion}")
		compile("ch.qos.logback:logback-classic:${logbackVersion}")
        compile('org.apache.commons:commons-lang3:3.3')
		//
		provided group:'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'
		// Add dependencies for testing (these will only be used for the testing phase)
		testCompile("junit:junit:${junitVersion}")
		testCompile("org.hamcrest:hamcrest-all:1.3")
		testCompile("org.mockito:mockito-core:1.9.5")
		testCompile("org.springframework:spring-test:$springVersion")
	}
	
	//Include provided for compilation
	sourceSets.main.compileClasspath += configurations.provided
	
	task copyDependenciesToLibDir( type: Copy ) {
		into "$buildDir/libs/lib"
		from configurations.runtime
	}
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}