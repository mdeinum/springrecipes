description = 'Spring Recipes :: Chapter 15 :: Spring Enterprise Integration'

// Define 15_1_i project
project(':Ch15:Recipe_15_1_i') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.replicator.Main")
   }
} // End 15_1_i project 


// Define 15_1_ii project
project(':Ch15:Recipe_15_1_ii') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core',version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-aop', version:"$springVersion"
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.replicator.Main")
   }
} // End 15_1_ii project 


// Define 15_1_iii project
project(':Ch15:Recipe_15_1_iii') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core',version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-aop', version:"$springVersion"
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.replicator.Main")
   }
} // End 15_1_iii project 


// Define 15_1_iv project
project(':Ch15:Recipe_15_1_iv') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-aop', version:"$springVersion"
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.replicator.Main")
   }
} // End 15_1_iv project 

// Define 15_1_v project
project(':Ch15:Recipe_15_1_v') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-aop', version:"$springVersion"
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.replicator.Main")
   }
} // End 15_1_v project 

// Define 15_1_vi project
project(':Ch15:Recipe_15_1_vi') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-aop', version:"$springVersion"
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.replicator.Main")
   }
} // End 15_1_vi project 

// Define 15_1_vii project
project(':Ch15:Recipe_15_1_vii') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-aop', version:"$springVersion"
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.replicator.Main")
   }
} // End 15_1_vii project 

// Define 15_1_viii project
project(':Ch15:Recipe_15_1_viii') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-aop', version:"$springVersion"
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.replicator.Main")
   }
} // End 15_1_viii project 


// Define 15_2_i project
project(':Ch15:Recipe_15_2_i') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-aop', version:"$springVersion"
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.replicator.Main")
   }
} // End 15_2_i project 

// Define 15_2_ii project
project(':Ch15:Recipe_15_2_ii') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-aop', version:"$springVersion"
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.replicator.Main")
   }
} // End 15_2_ii project 

// Define 15_2_ii project
project(':Ch15:Recipe_15_2_iii') {
    // Define defaultTasks, first clean then build for springintro
    defaultTasks 'clean', 'build'
    // Define dependencies
    dependencies {
        compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
        compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
        compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
        compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
        compile group: 'org.springframework', name: 'spring-aop', version:"$springVersion"
    }
    // Define how to build final JAR for project
    jar {
        //The following creates a fat-JAR with all dependencies embedded
        // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        //Instead use custom task to copy files to lib directory and create a custom manfiest
        manifest.attributes("Main-Class": "com.apress.springrecipes.replicator.Main")
    }
} // End 15_2_ii project

// Define 15_3_i project
project(':Ch15:Recipe_15_3_i') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-aop', version:"$springVersion"
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.replicator.Client")
   }
} // End 15_3_i project 

// Define 15_3_ii project
project(':Ch15:Recipe_15_3_ii') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-aop', version:"$springVersion"
    compile group: 'org.aspectj', name: 'aspectjtools',version:"$aspectjVersion"
    compile group: 'aopalliance', name: 'aopalliance', version:'1.0'           
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.replicator.Client")
   }
} // End 15_3_ii project 

// Define 15_4_i project
project(':Ch15:Recipe_15_4_i') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'javax.mail', name: 'mail', version: '1.4.7'
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.replicator.Main")
   }
} // End 15_4_i project 


// Define 15_4_ii project
project(':Ch15:Recipe_15_4_ii') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context-support', version:"$springVersion"
    compile group: 'javax.mail', name: 'mail', version: '1.4.7'
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.replicator.Main")
   }
} // End 15_4_ii project 


// Define 15_4_iii project
project(':Ch15:Recipe_15_4_iii') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context-support', version:"$springVersion"
    compile group: 'javax.mail', name: 'mail', version: '1.4.7'
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.replicator.Main")
   }
} // End 15_4_iii project 



// Define 15_4_iv project
project(':Ch15:Recipe_15_4_iv') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context-support', version:"$springVersion"
    compile group: 'javax.mail', name: 'mail', version: '1.4.7'
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.replicator.Main")
   }
} // End 15_4_iv project 


// Define 15_4_v project
project(':Ch15:Recipe_15_4_v') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context-support', version:"$springVersion"
    compile group: 'javax.mail', name: 'mail', version: '1.4.7'
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.replicator.Main")
   }
} // End 15_4_v project 


// Define 15_5_i project
project(':Ch15:Recipe_15_5_i') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.quartz-scheduler', name: 'quartz', version:'2.2.0'   
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.replicator.Main")
   }
} // End 15_5_i

// Define 15_5_ii project
project(':Ch15:Recipe_15_5_ii') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.quartz-scheduler', name: 'quartz', version:'2.2.0'   
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.replicator.Main")
    }
} // End 15_5_ii


// Define 15_5_iii project
project(':Ch15:Recipe_15_5_iii') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context-support', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-tx', version:"$springVersion"
    compile group: 'org.quartz-scheduler', name: 'quartz', version:'2.2.0'   
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.replicator.Main")
   }
} // End 15_5_iii

// Define 15_5_iv project
project(':Ch15:Recipe_15_5_iv') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context-support', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-tx', version:"$springVersion"
    compile group: 'org.quartz-scheduler', name: 'quartz', version:'2.2.0'   
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.replicator.Main")
   }
} // End 15_5_iv

// Define 15_6_i project
project(':Ch15:Recipe_15_6_i') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-aop', version:"$springVersion"
    compile group: 'org.aspectj', name: 'aspectjtools',version:"$aspectjVersion"
    compile group: 'aopalliance', name: 'aopalliance', version:'1.0'           
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.replicator.Main")
   }
} // End 15_6_i

// Define 15_6_ii project
project(':Ch15:Recipe_15_6_ii') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-aop', version:"$springVersion"
    compile group: 'org.aspectj', name: 'aspectjtools',version:"$aspectjVersion"
    compile group: 'aopalliance', name: 'aopalliance', version:'1.0'           
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.replicator.Main")
   }
} // End 15_6_ii


// Define 15_7_Client project
project(':Ch15:Recipe_15_7_Client') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-aop', version:"$springVersion"
    compile group: 'org.aspectj', name: 'aspectjtools',version:"$aspectjVersion"
    compile group: 'aopalliance', name: 'aopalliance', version:'1.0'           
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.weather.RmiClient")
   }
} // End 15_7_Client project 

// Define 15_7_Server project
project(':Ch15:Recipe_15_7_Server') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-aop', version:"$springVersion"
    compile group: 'org.aspectj', name: 'aspectjtools',version:"$aspectjVersion"
    compile group: 'aopalliance', name: 'aopalliance', version:'1.0'           
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.weather.RmiServer")
   }
} // End 15_7_Server project 

// Define 15_8_Burlap_Server
project(':Ch15:Recipe_15_8_Burlap_Server') {
   // Define usage of war plugin
   apply plugin: 'war'
   // Define defaulttasks, first clean, then build, then war
   defaultTasks 'clean','build','war'
   // Define dependencies
   war {
       archiveName='burlap.war'
      }	
   dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-webmvc', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-web', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-aop', version:"$springVersion"
    compile group: 'com.caucho', name: 'hessian', version:'4.0.7'
   }
} // End 15_8_Burlap_Server


// Define 15_8_Burlap_Client project
project(':Ch15:Recipe_15_8_Burlap_Client') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-web', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-aop', version:"$springVersion"
    compile group: 'org.aspectj', name: 'aspectjtools',version:"$aspectjVersion"
    compile group: 'aopalliance', name: 'aopalliance', version:'1.0'           
    compile group: 'com.caucho', name: 'hessian', version:'4.0.7'
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.weather.BurlapClient")
    }
} // End 15_8_Burlap_Client project 


// Define 15_8_Hessian_Server
project(':Ch15:Recipe_15_8_Hessian_Server') {
   // Define usage of war plugin
   apply plugin: 'war'
   // Define defaulttasks, first clean, then build, then war
   defaultTasks 'clean','build','war'
   // Define dependencies
   war {
       archiveName='hessian.war'
      }	
   dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-webmvc', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-web', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-aop', version:"$springVersion"
    compile group: 'com.caucho', name: 'hessian', version:'4.0.7'
   }
} // End 15_8_Hessian_Server


// Define 15_8_Hessian_Client project
project(':Ch15:Recipe_15_8_Hessian_Client') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-web', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-aop', version:"$springVersion"
    compile group: 'org.aspectj', name: 'aspectjtools',version:"$aspectjVersion"
    compile group: 'aopalliance', name: 'aopalliance', version:'1.0'           
    compile group: 'com.caucho', name: 'hessian', version:'4.0.7'
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.weather.HessianClient")
    }
} // End 15_8_Hessian_Client project 


// Define 15_8_HTTPInvoker_Server
project(':Ch15:Recipe_15_8_HTTPInvoker_Server') {
   // Define usage of war plugin
   apply plugin: 'war'
   // Define defaulttasks, first clean, then build, then war
   defaultTasks 'clean','build','war'
   // Define dependencies
   war {
       archiveName='httpinvoker.war'
      }	
   dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-webmvc', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-web', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-aop', version:"$springVersion"
   }
} // End 15_8_HTTPInvoker_Server


// Define 15_8_HTTPInvoker_Client project
project(':Ch15:Recipe_15_8_HTTPInvoker_Client') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-web', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-aop', version:"$springVersion"
    compile group: 'org.aspectj', name: 'aspectjtools',version:"$aspectjVersion"
    compile group: 'aopalliance', name: 'aopalliance', version:'1.0'           
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.weather.HTTPInvokerClient")
   }
} // End 15_8_HTTPInvoker_Client project 


// Define 15_9_JDK_Server project
project(':Ch15:Recipe_15_9_JDK_Server') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-aop', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-web', version:"$springVersion"
    compile group: 'org.aspectj', name: 'aspectjtools',version:"$aspectjVersion"
    compile group: 'aopalliance', name: 'aopalliance', version:'1.0'           
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.weather.JaxWsServer")
   }
} // End 15_9_JDK_Server project 


// Define 15_9_CXF_Server project
project(':Ch15:Recipe_15_9_CXF_Server') {   
   // Define usage of war plugin
   apply plugin: 'war'
   // Define defaulttasks, first clean, then build, then war
   defaultTasks 'clean','build','war'
   // Define dependencies
   war {
       archiveName='jaxws.war'
      }	
   dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-webmvc', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-web', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-aop', version:"$springVersion"
    compile group: 'org.apache.cxf', name: 'cxf-rt-transports-http', version:'2.7.5'
    compile group: 'org.apache.cxf', name: 'cxf-rt-frontend-jaxws', version:'2.7.5'
   }
} // End 15_9_CXF_Server project 

// Define 15_9_CXF_Client project
project(':Ch15:Recipe_15_9_CXF_Client') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-web', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-aop', version:"$springVersion"
    compile group: 'org.aspectj', name: 'aspectjtools',version:"$aspectjVersion"
    compile group: 'aopalliance', name: 'aopalliance', version:'1.0'           
    compile group: 'org.apache.cxf', name: 'cxf-rt-transports-http', version:'2.7.5'
    compile group: 'org.apache.cxf', name: 'cxf-rt-frontend-jaxws', version:'2.7.5'
    compile group: 'org.apache.cxf', name: 'cxf-rt-core', version:'2.7.5'
    compile group: 'org.apache.cxf', name: 'cxf-rt-bindings-soap', version:'2.7.5'
    compile group: 'org.apache.cxf', name: 'cxf-api', version:'2.7.5'
    compile group: 'org.apache.cxf', name: 'cxf-rt-frontend-simple', version:'2.7.5'
    compile group: 'org.apache.cxf', name: 'cxf-common-utilities', version:'2.5.10'
    compile group: 'org.apache.cxf', name: 'cxf-rt-databinding-jaxb', version:'2.7.5'            
    compile group: 'org.apache.ws.xmlschema', name: 'xmlschema-core', version:'2.0.3'                      
    compile group: 'org.codehaus.woodstox', name: 'woodstox-core-lgpl', version:'4.2.0'
    compile group: 'org.codehaus.woodstox', name: 'stax2-api', version:'3.1.3'
    compile group: 'wsdl4j', name: 'wsdl4j', version:'1.6.3' 
  }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.weather.JaxWsInvokerClient")
   }
} // End 15_9_CXF_Client project 


// Define 15_9_SpringJaxWs_Client
project(':Ch15:Recipe_15_9_SpringJaxWs_Client') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-web', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-aop', version:"$springVersion"
    compile group: 'org.aspectj', name: 'aspectjtools',version:"$aspectjVersion"
    compile group: 'aopalliance', name: 'aopalliance', version:'1.0'           
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.weather.JaxWsInvokerClient")
   }
} // End 15_9_SpringJaxWs_Client project 


// Define 15_11_SpringWS_Server project
project(':Ch15:Recipe_15_11_SpringWS_Server') {   
   // Define usage of war plugin
   apply plugin: 'war'
   // Define defaulttasks, first clean, then build, then war
   defaultTasks 'clean','build','war'
   // Define dependencies
   war {
       archiveName='springws.war'
      }	
   dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-webmvc', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-web', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-aop', version:"$springVersion"

    compile group: 'org.springframework.ws', name: 'spring-ws-core', version:"$springWsVersion"
    compile group: 'org.springframework.ws', name: 'spring-xml', version:"$springWsVersion"
    compile group: 'wsdl4j', name: 'wsdl4j', version: '1.6.3'
    compile group: 'dom4j', name: 'dom4j', version:'1.6.1'
    compile group: 'jaxen', name: 'jaxen', version:'1.1.4'            
   }
} // End 15_11_SpringWS_Server project 


// Define 15_11_SpringWS_Client
project(':Ch15:Recipe_15_11_SpringWS_Client') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-web', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-webmvc', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-aop', version:"$springVersion"
    compile group: 'org.aspectj', name: 'aspectjtools',version:"$aspectjVersion"
    compile group: 'aopalliance', name: 'aopalliance', version:'1.0'           
    compile group: 'org.springframework.ws', name: 'spring-ws-core', version:"$springWsVersion"	
    compile group: 'org.springframework.ws', name: 'spring-xml', version:"$springWsVersion"
    compile group: 'dom4j', name: 'dom4j', version:'1.6.1'
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.weather.SpringWSInvokerClient")
   }
} // End 15_11_SpringWS_Client project 


// Define 15_12_SpringWS_Server project
project(':Ch15:Recipe_15_12_SpringWS_Server') {   
   // Define usage of war plugin
   apply plugin: 'war'
   // Define defaulttasks, first clean, then build, then war
   defaultTasks 'clean','build','war'
   // Define dependencies
   war {
       archiveName='springws.war'
      }	
   dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-webmvc', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-web', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-aop', version:"$springVersion"

    compile group: 'org.springframework.ws', name: 'spring-ws-core', version:"$springWsVersion"
    compile group: 'org.springframework.ws', name: 'spring-xml', version:"$springWsVersion"
    compile group: 'wsdl4j', name: 'wsdl4j', version: '1.6.3'
    compile group: 'dom4j', name: 'dom4j', version:'1.6.1'
    compile group: 'jaxen', name: 'jaxen', version:'1.1.4'
    compile group: 'org.codehaus.castor', name:'castor-xml', version:'1.3.3'
	compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'
            
   }
} // End 15_12_SpringWS_Server project 


// Define 15_12_SpringWS_Client
project(':Ch15:Recipe_15_12_SpringWS_Client') {   
  // Define defaultTasks, first clean then build for springintro
  defaultTasks 'clean', 'build'
  // Define dependencies
  dependencies {
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-expression', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-beans', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-context', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-web', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-aop', version:"$springVersion"
    compile group: 'org.aspectj', name: 'aspectjtools',version:"$aspectjVersion"
    compile group: 'aopalliance', name: 'aopalliance', version:'1.0'           
    compile group: 'org.springframework.ws', name: 'spring-ws-core', version:"$springWsVersion"	
    compile group: 'org.springframework.ws', name: 'spring-xml', version:"$springWsVersion"	  
    compile group: 'dom4j', name: 'dom4j', version:'1.6.1'
    compile group: 'org.codehaus.castor', name:'castor-xml', version:'1.3.3'
    compile group: 'org.codehaus.castor', name:'castor-core', version:'1.3.3'
    compile group: 'commons-lang', name: 'commons-lang', version:'2.6'   
   }
   // Define how to build final JAR for project
   jar {
     //The following creates a fat-JAR with all dependencies embedded 
     // from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
     //Instead use custom task to copy files to lib directory and create a custom manfiest
     manifest.attributes("Main-Class": "com.apress.springrecipes.weather.SpringWSInvokerClient")
   }
} // End 15_12_SpringWS_Client project 